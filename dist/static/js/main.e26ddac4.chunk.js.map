{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","state","initials","firebase","profile","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","e","preventDefault","SignedOutLinks","console","log","links","isEmpty","layout_SignedOutLinks","layout_SignedInLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","project_ProjectSummary","Dashboard","_this$props","this","uid","project_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","_this","setState","Object","defineProperty","target","value","handleSubmit","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","err","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e26ddac4.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    const {initials} = props\r\n    const handleClick = (e)=>{\r\n        e.preventDefault()\r\n        props.signOut()\r\n    }\r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><NavLink to='/' onClick={handleClick}>Log out</NavLink></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initials:state.firebase.profile.initials\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        signOut:() => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch,getState,{getFirebase}) =>{\r\n        const firebase = getFirebase()\r\n        \r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'})\r\n        }).catch((error)=>{\r\n            dispatch({type:'LOGIN_ERROR',error})\r\n        })\r\n    }\r\n}\r\nexport const signOut = () => {\r\n    return (dispatch,getState,{getFirebase}) =>{\r\n        const firebase = getFirebase()\r\n        \r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\nexport const signUp = (newUser) => {\r\n    return (dispatch,getState,{getFirebase,getFirestore}) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n        \r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res)=>{\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials:newUser.firstName[0] + newUser.lastName[0]\r\n            }).then(()=>{\r\n                dispatch({type:'SIGNUP_SUCCESS'})\r\n            }).catch(err=>{dispatch({type:'SIGNUP_ERROR',err})})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/signup'>Sign up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log in</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) =>{\r\n    const {auth} = props\r\n    console.log(auth)\r\n    const links = !auth.isEmpty ? <SignedInLinks />:<SignedOutLinks />\r\n    return (\r\n        <nav className='nav-wrapper grey darken-3'>\r\n            <div className='container'>\r\n                <Link to='/' className='brand-logo'>MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props\r\n    return (\r\n        <div className='section'>\r\n            <div className='card z-depth-0'>\r\n                <div className='card-content'>\r\n                    <span className='card-title'>Notifications</span>\r\n                    <ul className='notifications'>\r\n                        {notifications && notifications.map(item =>{\r\n        return (\r\n        <li key={item.id}>\r\n            <span className='pink-text'>{item.user} </span>\r\n            <span>{item.content}</span>\r\n            <div className='grey-text note-date'>{moment(item.time.toDate()).fromNow()}</div>\r\n        </li>\r\n    )})} \r\n}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className='card z-depth-0 project-summary'>\r\n                <div className='card-content grey-text text-darken-3'>\r\n                    <span className='card-title'>{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className='grey-text'>Date {moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    \r\n    return (\r\n        <div className='section project-list'>\r\n        \r\n            {projects && projects.map(project=>{\r\n                return (\r\n                    <Link to={'/project/' + project.id}key={project.id} >\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )   \r\n            })}\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React,{Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../project/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        const {projects,auth,notifications} = this.props\r\n        \r\n        if(!auth.uid){return <Redirect to='/signin' />}\r\n        return (\r\n            <div className='dashboard container'>\r\n                <div className='row'>\r\n                    <div className='col s12 m6'><ProjectList projects={projects} /></div>\r\n                    <div className='col s12 m5 offset-m1'><Notifications notifications={notifications} /></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return ({\r\n        projects:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth,\r\n        notifications:state.firestore.ordered.notifications\r\n    })\r\n}\r\n\r\nexport default compose(connect(mapStateToProps),firestoreConnect([{collection:'projects',orderBy:['createdAt','desc']},{collection:'notifications',limit:3,orderBy:['time','desc']}]))(Dashboard)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project,auth} = props\r\n    \r\n    if(!auth.uid){return <Redirect to='/signin' />}\r\n    if(project){\r\n        return (\r\n        <div className='container section project-details'>\r\n            <div className='card z-depth-0'>\r\n                \r\n                <div className='card-content'>\r\n                    <span className='card-title'>{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n        \r\n                <div className='card-action lighten-4 grey-text'>\r\n                    <div>Posted by {project.authorLastName} {project.authorFirstName}</div>\r\n                    <div>Date {moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }else{\r\n        return (\r\n        <div className='container center'>\r\n            <p>Loading</p>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) =>{\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id]:null\r\n    \r\n    return {\r\n        project:project,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps),firestoreConnect([{collection:'projects'}]))(ProjectDetails)","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component{\r\n    state = {\r\n        email:'',\r\n        password:''\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        this.props.signIn(this.state)\r\n        \r\n    }\r\n    render(){\r\n        const {authError,auth} = this.props\r\n        \r\n        if(auth.uid){return <Redirect to='/' />}\r\n        return (\r\n            <div className='container'>\r\n            \r\n                <form className='white' onSubmit={this.handleSubmit}>\r\n                    <h5 className='grey-text text-darken-3'>Log In</h5>\r\n                    \r\n                    <div className='input-field'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n            \r\n                    <div className='input-field'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n            \r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Login</button>\r\n                        <div className='red-text center'>{authError ? <p>{authError}</p>:null}</div>\r\n                    </div>\r\n                </form>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state) => {\r\n    return {\r\n        authError:state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn:(creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component{\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n    render(){\r\n        const {auth} = this.props\r\n        \r\n        if(auth.uid){return <Redirect to='/' />}\r\n        return (\r\n            <div className='container'>\r\n            \r\n                <form className='white' onSubmit={this.handleSubmit}>\r\n                    <h5 className='grey-text text-darken-3'>Sign Up</h5>\r\n                    \r\n                    <div className='input-field'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n            \r\n                    <div className='input-field'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n            \r\n                    <div className='input-field'>\r\n                        <label htmlFor='lastName'>Last name</label>\r\n                        <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n                    </div>\r\n            \r\n                    <div className='input-field'>\r\n                        <label htmlFor='firstName'>First name</label>\r\n                        <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n                    </div>\r\n            \r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Sign up</button>\r\n                    </div>\r\n                </form>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signUp:(newUser)=>dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component{\r\n    state = {\r\n        title:'',\r\n        content:''\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        //console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render(){\r\n        const {auth} = this.props\r\n        \r\n        if(!auth.uid){return <Redirect to='/signin' />}\r\n        return (\r\n            <div className='container'>\r\n            \r\n                <form className='white' onSubmit={this.handleSubmit}>\r\n                    <h5 className='grey-text text-darken-3'>Create new project</h5>\r\n                    \r\n                    <div className='input-field'>\r\n                        <label htmlFor='title'>Title</label>\r\n                        <input type=\"text\" id='title' onChange={this.handleChange} />\r\n                    </div>\r\n            \r\n                    <div className='input-field'>\r\n                        <label htmlFor='content'>Project content</label>\r\n                        <textarea className='materialize-textarea' id='content' onChange={this.handleChange}></textarea>\r\n                    </div>\r\n            \r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Create</button>\r\n                    </div>\r\n                </form>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        createProject:(project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)","export const createProject = (project)=>{\r\n    return (dispatch,getState,{ getFirebase,getFirestore })=>{\r\n        //async call to database\r\n        const firestore = getFirestore()\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        \r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorId,\r\n            createdAt:new Date()\r\n        }).then(()=>{\r\n            dispatch({type:'CREATE_PROJECT',project:project})\r\n        }).catch((error)=>{\r\n            dispatch({type:\"CREATE_PROJECT_ERROR\",error})\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/project/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/project/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n              <Navbar />\n            <Switch>\n                <Route exact path='/' component={Dashboard} />\n                <Route path='/project/:id' component={ProjectDetails} />\n                <Route path='/signin' component={SignIn} />\n                <Route path='/signup' component={SignUp} />\n                <Route path='/create' component={CreateProject} />\n            </Switch>\n            </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError:null\r\n}\r\n\r\nconst authReducer = (state=initState,action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state,\r\n                authError:'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return{\r\n                ...state,\r\n                authError:action.err.message\r\n            }\r\n        default:return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects:[\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state=initState,action) => {\r\n    switch(action.type){\r\n        case \"CREATE_PROJECT\":\r\n            console.log('created project',action.project)\r\n            return state\r\n        case \"CREATE_PROJECT_ERROR\":\r\n            console.log(action.error)\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Initialize Firebase\r\n  var config = {\r\n    apiKey: \"AIzaSyDi-NF_mIoz5g_LbNpaYvhZpdgcpOHHsaI\",\r\n    authDomain: \"netninjamarioplan-cc827.firebaseapp.com\",\r\n    databaseURL: \"https://netninjamarioplan-cc827.firebaseio.com\",\r\n    projectId: \"netninjamarioplan-cc827\",\r\n    storageBucket: \"netninjamarioplan-cc827.appspot.com\",\r\n    messagingSenderId: \"152889006713\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({timestampsInSnapshots:true})\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore,getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase,getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(rootReducer,composeEnhancers(\n    applyMiddleware(thunk.withExtraArgument({getFirestore,getFirebase})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig,{useFirestoreForProfile:true,userProfile:'users',attachAuthIsReady:true})\n    )\n)\n\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n})\n"],"sourceRoot":""}